package com.hanwang.resttemplate.component;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.stereotype.Component;import org.springframework.web.client.RestTemplate;import java.util.HashMap;import java.util.Map;@Componentpublic class BaiduMapRequest {	private String urlBaidu = "http://api.map.baidu.com/reverse_geocoding/v3";	private String urlMap = "?ak={ak}&output={output}&location={location}";	private String urlString = "?ak={1}&output=json&location={2}";	private String ak = "sUVxgOPLFQpoNH8j3rHWUGQVtPV99O8K";	private String location = "25.045228,102.684909";	private String getRequestStringParam(){		return "?ak="+ak + "&output=json&location=" + location;	}	private final Logger logger = LoggerFactory.getLogger(BaiduMapRequest.class);	private Map<String, String> getRequestMapParam(){		Map<String,String> params = new HashMap();		params.put("ak", ak);		params.put("output", "json");		params.put("location", location);		return params;	}	private void printResponseEntity(ResponseEntity<Notice> entity){		System.out.println("statusCode.is2xxSuccessful(): "+entity.getStatusCode().is2xxSuccessful());		System.out.println("entity.getStatusCode(): "+entity.getStatusCode());		System.out.println("entity.getStatusCodeValue(): "+entity.getStatusCodeValue());		System.out.println("entity.getHeaders(): "+entity.getHeaders().toString());		System.out.println("entity.getBody(): "+entity.getBody());	}	@Autowired	private RestTemplate restTemplate;	public void getBaiduMapForObject(){		Notice notice = restTemplate.getForObject(				urlBaidu + getRequestStringParam(), Notice.class);		logger.warn("使用【getForObject】方法不带参数的get请求");		System.out.println(notice);	}	public void getBaiduMapForObjectParam(){		Notice notice = restTemplate.getForObject(urlBaidu + urlMap, Notice.class, getRequestMapParam());		logger.warn("使用【getForObject】方法带参数的get请求1");		System.out.println(notice);	}	public void getBaiduMapForObjectParam2(){		Notice notice = restTemplate.getForObject(				urlBaidu + urlString, Notice.class,				ak, location);		logger.warn("使用【getForObject】方法带参数的get请求2");		System.out.println(notice);	}	public void getBaiduMapForEntity(){		ResponseEntity<Notice> entity = restTemplate.getForEntity(				urlBaidu + getRequestStringParam(), Notice.class);		logger.warn("使用【getForEntity】方法不带参数的get请求");		printResponseEntity(entity);	}	public void getBaiduMapForEntityParam(){		ResponseEntity<Notice> entity = restTemplate.getForEntity(urlBaidu + urlMap, Notice.class, getRequestMapParam());		logger.warn("使用【getForEntity】方法带参数的get请求1");		printResponseEntity(entity);	}	public void getBaiduMapForEntityParam2(){		ResponseEntity<Notice> entity = restTemplate.getForEntity(				urlBaidu + urlString, Notice.class,				ak, location);		logger.warn("使用【getForEntity】方法带参数的get请求2");		printResponseEntity(entity);	}}